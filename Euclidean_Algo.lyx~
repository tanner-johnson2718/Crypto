#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Euclidean Algorithm
\end_layout

\begin_layout Abstract
In this short document we simply go over the proof and more importantly
 go over the intuition behind the Euclidean algorithm and the extended Euclidean
 algorithm.
 The Euclidean algorithm will find the G.C.D.
 or greatest common divisor of two positive integers.
 Now the extended Euclidean algorithm will find the modular inverse of a
 given integer, modulo some base.
 Thus, this document assumes a comfortableness with topics such as, G.C.D.,
 divisor, modular aritmetic, etc.
\end_layout

\begin_layout Section
Euclidean Algorithm - Finding The G.C.D.
\end_layout

\begin_layout Standard
In this section we formally define the G.C.D.
 function, along with other important concepts, and given the algorithm
 for computing its value.
\end_layout

\begin_layout Subsection
Definitions
\end_layout

\begin_layout Itemize
\begin_inset Formula $a\in\mathbb{Z}$
\end_inset

 and 
\begin_inset Formula $b\in\mathbb{Z}$
\end_inset

 such that 
\begin_inset Formula $a,b>0$
\end_inset

.
 These are the two input integers which we would like to compute the G.C.D.
\end_layout

\begin_layout Itemize
We define the Euclidean divsion to be as follows:
\end_layout

\begin_deeper
\begin_layout Itemize
Given two positive integers 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, there exist unique integers 
\begin_inset Formula $q$
\end_inset

 and 
\begin_inset Formula $0\leqq r<b$
\end_inset

 such that 
\begin_inset Formula $a=qb+r$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $q$
\end_inset

 is the qotient and is considered to be th ouput of the following operator:
 
\begin_inset Formula $a//b=q$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $r$
\end_inset

 is the remainder and is considered to be the output of the following operator
 
\begin_inset Formula $a\%b=r$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
We define the notation 
\begin_inset Formula $(a)$
\end_inset

 to be the set of integer divisors of a given postive integer 
\begin_inset Formula $a$
\end_inset

.
 Formaly, 
\begin_inset Formula $d\in(a)$
\end_inset

 if and only if 
\begin_inset Formula $a\%d=0$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
This set is finite and has some unique largest value.
\end_layout

\begin_layout Itemize
\begin_inset Formula $1$
\end_inset

 is always an element of this set.
\end_layout

\end_deeper
\begin_layout Itemize
We define 
\begin_inset Formula $g=\gcd(a,b)$
\end_inset

 to be the largest element of the set 
\begin_inset Formula $(a)\bigcap(b)$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Since 
\begin_inset Formula $1$
\end_inset

 is always an element of both sets, this function is always defined.
\end_layout

\end_deeper
\begin_layout Subsection
Important Lemma
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(a)$
\end_inset

 be the set of integer divisors of a given postive integer 
\begin_inset Formula $a$
\end_inset

.
 Let 
\begin_inset Formula $a,b$
\end_inset

 be integers and let 
\begin_inset Formula $r=a\%b$
\end_inset

 where 
\begin_inset Formula $\%$
\end_inset

 is the modulus operator.
 Thus we can write 
\begin_inset Formula $a=nb+r$
\end_inset

 for some integer 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Paragraph
Claim: 
\begin_inset Formula $(a)\bigcap(b)=(b)\bigcap(r)$
\end_inset

.
\end_layout

\begin_layout Subparagraph
\begin_inset Formula $\rightarrow$
\end_inset

 Prove: 
\begin_inset Formula $(a)\bigcap(b)\subseteq(b)\bigcap(r).$
\end_inset

 
\series medium
Let 
\family roman
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $d\in(a)\bigcap(b)$
\end_inset

 be a divsor of both 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, then 
\begin_inset Formula $a=n_{a}d$
\end_inset

 and 
\begin_inset Formula $b=n_{b}d$
\end_inset

 for some integers 
\begin_inset Formula $n_{a}$
\end_inset

 and 
\begin_inset Formula $n_{b}$
\end_inset

.
 So 
\begin_inset Formula $r=(n_{a}-n_{b}n)d$
\end_inset

 by defintion.
 Since 
\begin_inset Formula $n_{a}-n_{b}n$
\end_inset

 is also an integer, we can say that 
\begin_inset Formula $d$
\end_inset

 divides both 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $r$
\end_inset

.
 So we can conclude
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $d\in(b)\bigcap(r)$
\end_inset

 thus proving the set inequality.
\end_layout

\begin_layout Subparagraph*
\begin_inset Formula $\leftarrow$
\end_inset

Prove: 
\begin_inset Formula $(a)\bigcap(b)\subseteq(b)\bigcap(r).$
\end_inset

 
\series medium
If the divisor
\series default
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $d\in(b)\bigcap(r)$
\end_inset

, then 
\begin_inset Formula $r=n_{r}d$
\end_inset

 and 
\begin_inset Formula $b=n_{b}d$
\end_inset

 for some integers 
\begin_inset Formula $n_{r}$
\end_inset

 and 
\begin_inset Formula $n_{b}$
\end_inset

.
 So 
\begin_inset Formula $a=(nn_{b}+n_{r})d$
\end_inset

 by definition.
 Since 
\begin_inset Formula $nn_{b}+n_{r}$
\end_inset

 is also an integer, we can say that 
\begin_inset Formula $d$
\end_inset

 divides both 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
 So we can conclude
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $d\in(a)\bigcap(b)$
\end_inset

 thus proving the set inequality.
 Since both set inequalities hold, the sets must be equal.
\end_layout

\begin_layout Paragraph

\series medium
With this result, we can both derive and prove a fairly simple procedure
 for computing the G.C.D.
 of two integer inputs which we go over in the next section.
 A direct application of the above lemma gives the following relation: 
\begin_inset Formula $\gcd(a,b)=\gcd(b,r)$
\end_inset

, again where 
\begin_inset Formula $r$
\end_inset

 is the remainder of the 
\begin_inset Formula $a$
\end_inset

 modulus 
\begin_inset Formula $b$
\end_inset

.
 Since the sets equal, the largest element must be the same.
\end_layout

\begin_layout Subsection
Algorithm
\end_layout

\begin_layout Standard
Consider the following example suppose you want to find the G.C.D.
 of 
\begin_inset Formula $97$
\end_inset

 and 
\begin_inset Formula $35$
\end_inset

.
 Usng the above lemma how would you begin? Well we know that 
\begin_inset Formula $\gcd(97,35)=\gcd(35,27)$
\end_inset

 where 
\begin_inset Formula $27=97\%35$
\end_inset

.
 Well now we can just apply the same rule so, 
\begin_inset Formula $\gcd(35,27)=\gcd(27,8)$
\end_inset

 where 
\begin_inset Formula $8=35\%27$
\end_inset

.
 Now the rest of this computation is tabulated in table 1.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $a$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $r$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
97
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
35
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
35
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Algorithmic steps to find 
\begin_inset Formula $\gcd(97,35)$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see from the table, we reach a point where the remainder is 0.
 At that point we can halt computation as we found a number that actualy
 divides both inputs, that number is what is currently stored in the 
\begin_inset Formula $b$
\end_inset

 column.
 This yields a very simple routine.
 We define a one liner, C routine below.
 As shown in Algorithm 1, it iteratively computes 
\begin_inset Formula $a\%b$
\end_inset

, replacing 
\begin_inset Formula $a$
\end_inset

 with 
\begin_inset Formula $b$
\end_inset

, and replacing 
\begin_inset Formula $b$
\end_inset

 with 
\begin_inset Formula $r=a\%b$
\end_inset

.
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
GCD
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
int gcd(a,b){ 
\series medium
b == 0 ? return a : return gcd(b, a% b); }
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Computational Complexity
\end_layout

\begin_layout Standard
In this section we explore the computational complexity of the G.C.D.
 algorithm.
 We assume 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are stored in registers and the computation of the modulus is an 
\begin_inset Formula $O(1)$
\end_inset

 operation.
 Moreover, the moving 
\begin_inset Formula $a,b,r$
\end_inset

 into the correct registers we again assume is 
\begin_inset Formula $O(1)$
\end_inset

and thus we assume each iteration of the G.C.D.
 alorithm is constant time.
 Thus we can fully describe the computational complexity in terms of how
 many iterations it takes.
 Image 1 is a graphic of how many iterations it take for all pairs of inputs
 up to 1000.
 This produces an intersting pattern.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename gcd_iters.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Number iterations of G.C.D.
 Algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series medium
To begin, one intersting detail we can observe by using the computational
 experiment that produced the above image is, the maximum number of iterations
 over all pairs to 1000, is 15 and this occurs at the input 610,987.
 The keen observer would notice that these are two successive Fibonacci
 numbers.
 More over the apparent lines created in Image 1 are cases where one of
 the inputs divide each other and correspond to the lines 
\begin_inset Formula $y=nx$
\end_inset

 and 
\begin_inset Formula $y=\frac{1}{n}x$
\end_inset

.
 
\end_layout

\begin_layout Section
Extended Euclidean Algorithm
\end_layout

\begin_layout Section
What's Next
\end_layout

\end_body
\end_document
